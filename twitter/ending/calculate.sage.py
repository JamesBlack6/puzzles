

# This file was *autogenerated* from the file calculate.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_50 = Integer(50); _sage_const_101 = Integer(101); _sage_const_7 = Integer(7); _sage_const_13 = Integer(13); _sage_const_4 = Integer(4); _sage_const_11 = Integer(11)
# Calculate the last non-zero digit of x! base p

def last(x,p):
    if x<p:
        return(mod(factorial(x),p))
    else:
        y = floor(x/p)
        r = (mod(x,p)).lift()
        if (mod(y,_sage_const_2 )==_sage_const_1 ):
            return(-last(y,p)*mod(factorial(r),p))
        else:
            return(last(y,p)*mod(factorial(r),p))

d = _sage_const_50 
p = _sage_const_101 

print(f"p={p}, d={d}")
i = (d-_sage_const_1 )*((p**(p-_sage_const_1 )-_sage_const_1 )/(p-_sage_const_1 ))+_sage_const_1 
print(f"{i}! ends in {last(i,p)} base {p}")
print()

print(f"p={p}, d={d}")
i = (d-_sage_const_1 )*((p**(p-_sage_const_1 )-_sage_const_1 )/(p-_sage_const_1 ))+p**(p-_sage_const_2 )
print(f"{i}! ends in {last(i,p)} base {p}")
print()

d = _sage_const_7 
p = _sage_const_13 

print(f"p={p}, d={d}")
i = (d-_sage_const_1 )*((p**(p-_sage_const_1 )-_sage_const_1 )/(p-_sage_const_1 ))+_sage_const_1 
print(i.str(base=p))
print(f"{i}! ends in {last(i,p)} base {p}")
print()

print(f"p={p}, d={d}")
i = (d-_sage_const_1 )*((p**(p-_sage_const_1 )-_sage_const_1 )/(p-_sage_const_1 ))+p**(p-_sage_const_2 )
print(i.str(base=p))
print(f"{i}! ends in {last(i,p)} base {p}")
print()

d = _sage_const_4 
p = _sage_const_11 

print(f"p={p}, d={d}")
i = (d-_sage_const_1 )*((p**(p-_sage_const_1 )-_sage_const_1 )/(p-_sage_const_1 ))+_sage_const_1 
print(i.str(base=p))
print(f"{i}! ends in {last(i,p)} base {p}")
print()

print(f"p={p}, d={d}")
i = (d-_sage_const_1 )*((p**(p-_sage_const_1 )-_sage_const_1 )/(p-_sage_const_1 ))+p**(p-_sage_const_2 )
print(i.str(base=p))
print(f"{i}! ends in {last(i,p)} base {p}")

