

# This file was *autogenerated* from the file matrix.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_7 = Integer(7); _sage_const_6 = Integer(6); _sage_const_5 = Integer(5); _sage_const_4 = Integer(4); _sage_const_100 = Integer(100); _sage_const_9 = Integer(9); _sage_const_8 = Integer(8); _sage_const_95 = Integer(95); _sage_const_12 = Integer(12); _sage_const_11 = Integer(11); _sage_const_10 = Integer(10)
def idot(x, y):
    #print(x,y)
    m = len(x)
    n = len(y)
    # Needs error checking
    if m != n:
        return _sage_const_0 
    return max([x[i]*y[i] for i in xrange(_sage_const_0 ,m)])

class Exchange:
    def __init__(self, x):
        self.x = matrix(x)
    def __str__(self):
        return str(self.x)
    def __mul__(self, other):
        return Exchange([[idot(row,column) for column in other.x.columns()] for row in self.x.rows()])
    def __pow__(self, n):
        # Needs error checking
        P = Exchange(matrix.identity(self.x.nrows()))
        A = self
        m = n
        while m >= _sage_const_1 :
            if (m%_sage_const_2 )==_sage_const_1 :
                P = P*A
            m = floor(m/_sage_const_2 )
            A = A*A
        return P

m = [[_sage_const_1 ,_sage_const_95 /_sage_const_100 ,_sage_const_8 /_sage_const_10 ],[_sage_const_8 /_sage_const_10 ,_sage_const_1 ,_sage_const_12 /_sage_const_10 ],[_sage_const_95 /_sage_const_100 ,_sage_const_8 /_sage_const_10 ,_sage_const_1 ]]
c = Exchange(m)
print "Arbitrage exists:"
print ""
print "c^2 = ",c**_sage_const_2 
print "c^3 = ",c**_sage_const_3 
print "c^4 = ",c**_sage_const_4 
print "c^5 = ",c**_sage_const_5 
print "c^6 = ",c**_sage_const_6 

print ""
m = [[_sage_const_1 ,_sage_const_9 /_sage_const_10 ,_sage_const_7 /_sage_const_10 ],[_sage_const_9 /_sage_const_10 ,_sage_const_1 ,_sage_const_9 /_sage_const_10 ],[_sage_const_11 /_sage_const_10 ,_sage_const_7 /_sage_const_10 ,_sage_const_1 ]]
c = Exchange(m)
print "No arbitrage exists:"
print ""
print "c = ",c
print "c^2 = ",c**_sage_const_2 
print "c^3 = ",c**_sage_const_3 
print "c^4 = ",c**_sage_const_4 
print "c^5 = ",c**_sage_const_5 
print "c^6 = ",c**_sage_const_6 

